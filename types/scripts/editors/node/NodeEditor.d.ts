export class NodeSocketElem extends RowFrame {
    canvas: HTMLCanvasElement;
    g: CanvasRenderingContext2D;
    isOutput: boolean;
    size: number;
    r: number;
    type: any;
    isHighlight: boolean;
    _last_update_key: any;
    ned: any;
    socket: any;
    needDraw: boolean;
    uinode: any;
    pos: Vector2;
    _abspos: Vector2;
    _last_dpi: any;
    getAbsPos(center_in_circle?: boolean): Vector2;
    updateSocketRef(): void;
    _redraw(): void;
    updateDPI(): void;
    updatePos(): void;
}
export class NodeUI extends Container {
    static define(): {
        tagname: string;
        style: string;
    };
    pos: Vector2;
    size: Vector2;
    rawpos: Vector2;
    zindex: number;
    inputs: any[];
    outputs: any[];
    allsockets: any[];
    _isHighlight: boolean;
    _node: any;
    graph_id: any;
    ned: any;
    set isHighlight(arg: boolean);
    get isHighlight(): boolean;
    remove(): void;
    getNode(): any;
}
export class NodeEditor extends Editor {
    static define(): {
        tagname: string;
        areaname: string;
        apiname: string;
        uiname: string;
        icon: number;
        flag: number;
        style: string;
        subclassChecksTheme: boolean;
    };
    ignoreGraphUpdates: number;
    _last_zoom: Vector2;
    _last_script: any;
    _last_compile_test: number;
    _last_dpi: any;
    _last_update_gen: any;
    velpan: VelPan;
    nodeContainer: HTMLElement;
    headerHeight: number;
    recalc: number;
    graphPath: string;
    graphClass: string;
    _last_graphpath: string;
    nodes: any[];
    sockets: any[];
    node_idmap: {};
    get graph(): any;
    get material(): void;
    loadThemeOverrides(): void;
    _on_velpan_change(): void;
    getNodeDPI(): any;
    clearGraph(): void;
    switchGraph(graphpath?: string): void;
    rebuildAll(): void;
    last_mpos: Vector2;
    on_mousedown(e: any): void;
    makeHeader(container: any): void;
    menuStrip: any;
    getUISocket(sock: any): any;
    on_resize(newsize: any): void;
    createOverdraw(): void;
    overdraw: HTMLElement;
    findSocket(localX: any, localY: any, limit?: number): any;
    on_mousemove(e: any): void;
    updateDPI(): void;
    updateZoom(): void;
    checkCompile(): void;
    _setNodeContainerRect(): void;
    pushIgnore(): void;
    popIgnore(): void;
    fetchGraph(): any;
    startAddNodeMenu(): void;
    makeAddNodeMenu(): HTMLElement;
    defineKeyMap(): void;
    getLocalMouse(x: any, y: any): number[] | Vector2;
    project(co: any, useScreenSpace?: boolean): void;
    unproject(co: any, useScreenSpace?: boolean): void;
    copy(): HTMLElement;
    _recalcLines(): void;
    _recalcUI(): void;
    loadSTRUCT(reader: any): void;
}
import { RowFrame } from '../../path.ux/scripts/core/ui.js';
import { Vector2 } from '../../util/vectormath.js';
import { Container } from '../../path.ux/scripts/core/ui.js';
import { Editor } from '../editor_base.js';
import { VelPan } from '../editor_base.js';
