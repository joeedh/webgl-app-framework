#!/usr/bin/env nodejs

let fs = require('fs');
let btoa = require('btoa');

let files = {
  ARROW : "arrow.obj",
  PLANE : "plane.obj",
  TORUS : "rotatetorus.obj",
  BLOCKARROW : "scalearrow.obj",
  CHEVRON : "chevron.obj",
  SPHERE  : "sphere.obj",
  LIGHT   : "light.obj",
  CURSOR  : "cursor.obj",
  CUBE    : "cube.obj"
};

let data = '';

for (let k in files) {
  let path = files[k];

  let buf = fs.readFileSync(path, "ascii");
  buf = btoa(buf);

  data += `  ${k} : "${buf}",\n`;
}

let out = `
/**WARNING: autogenerated file*/

import {readOBJ} from '../util/objloader.js';
import {PrimitiveTypes} from './simplemesh.js';

export let ShapeOBJs = {
${data}};

/**loadShapes will put widget meshes here, with the same keys as in
   ShapeOBJs*/
export let Shapes = {
};

window._Shapes = Shapes; //for debug console access
window._ShapeOBJs = ShapeOBJs; //for debug console access

export function loadShapes() {
  for (let k in ShapeOBJs) {
    let buf = ShapeOBJs[k];
    buf = atob(buf);

    Shapes[k] = readOBJ(buf).genRender(undefined, true);
  }
}

loadShapes();
`


fs.writeFileSync("../scripts/core/simplemesh_shapes.js", out);